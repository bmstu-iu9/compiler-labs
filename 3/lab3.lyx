#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{indentfirst}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language russian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style swiss
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Лабораторная работа №3
\begin_inset Newline newline
\end_inset


\begin_inset Quotes cld
\end_inset

Лексический анализатор на основе
\begin_inset Newline newline
\end_inset

регулярных выражений
\begin_inset Quotes crd
\end_inset


\end_layout

\begin_layout Author
Скоробогатов С.Ю., Коновалов А.В.
\end_layout

\begin_layout Date
16 марта 2016
\end_layout

\begin_layout Section
Цель работы
\end_layout

\begin_layout Standard
Целью данной работы является приобретение навыка разработки простейших лексическ
их анализаторов, работающих на основе поиска в тексте по образцу, заданному
 регулярным выражением.
\end_layout

\begin_layout Section
Исходные данные
\end_layout

\begin_layout Standard
Стандартная библиотека любого современного языка программирования содержит
 средства для поиска в тексте образцов, заданных регулярными выражениями.
 При этом используется расширенный синтаксис записи регулярных выражений,
 позволяющий по сути выйти за рамки регулярных языков.
 Механизм поиска по таким регулярным выражениям годится для написания простейших
 лексических анализаторов.
 Однако, для этого механизма характерна нелинейная зависимость времени работы
 от длины распознаваемой лексемы, поэтому в промышленных компиляторах он
 не используется.
\end_layout

\begin_layout Standard
В качестве языка реализации в данной лабораторной работе выберем язык Java,
 стандартная библиотека которого содержит пакет 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout

java.util.regex
\end_layout

\end_inset

, в котором располагаются классы 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout

Pattern
\end_layout

\end_inset

 и 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout

Matcher
\end_layout

\end_inset

, предназначенные для поиска по регулярным выражениям.
 Документация по этому пакету находится по адресу:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.oracle.com/javase/7/docs/api/java/util/regex/package-summary.html
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
Вводную статью по синтаксису регулярных выражений можно прочитать здесь:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.quizful.net/post/Java-RegExp
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Идея лексического анализа на основе поиска по регулярным выражениям состоит
 в использовании групп, представляющих собой фрагменты регулярных выражений,
 заключённые в круглые скобки, значения которых запоминаются при сопоставлении
 текста с
\begin_inset space ~
\end_inset

образцом.
 Например, на листинге 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Распознавание-идентификаторов-и"

\end_inset

 показано, как с использованием групп отличить идентификаторы от числовых
 литералов.
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Распознавание-идентификаторов-и"

\end_inset

Распознавание идентификаторов и числовых литералов
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\ttfamily},language=Java,numbers=left,numberstyle={\tiny},tabsize=4"
inline false
status open

\begin_layout Plain Layout

import java.util.regex.Matcher;
\end_layout

\begin_layout Plain Layout

import java.util.regex.Pattern;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// Компиляция для Windows:
\end_layout

\begin_layout Plain Layout

// javac -encoding utf8 IdentVsNumber.java
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

public class IdentVsNumber
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	public static void main(String args[])
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		test_match("Альфа123");
\end_layout

\begin_layout Plain Layout

		test_match("42");
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	public static void test_match(String text)
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		// Регулярные выражения
\end_layout

\begin_layout Plain Layout

		String ident = "
\backslash

\backslash
p{L}[
\backslash

\backslash
p{L}0-9]*";
\end_layout

\begin_layout Plain Layout

		String number = "[0-9]+";
\end_layout

\begin_layout Plain Layout

		String pattern = "(?<ident>^"+ident+")|(?<number>^"+number+")";
\end_layout

\begin_layout Plain Layout

		// Компиляция регулярного выражения
\end_layout

\begin_layout Plain Layout

		Pattern p = Pattern.compile(pattern);
\end_layout

\begin_layout Plain Layout

		// Сопоставление текста с регулярным выражением
\end_layout

\begin_layout Plain Layout

		Matcher m = p.matcher(text);
\end_layout

\begin_layout Plain Layout

		if (m.find()) {
\end_layout

\begin_layout Plain Layout

			if (m.group("ident") != null) {
\end_layout

\begin_layout Plain Layout

				System.out.println("Идентификатор " + m.group("ident"));
\end_layout

\begin_layout Plain Layout

			} else {
\end_layout

\begin_layout Plain Layout

				System.out.println("Число " + m.group("number"));
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		} else {
\end_layout

\begin_layout Plain Layout

			System.out.println("Ошибка");
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Задание
\end_layout

\begin_layout Standard
В лабораторной работе необходимо реализовать на языке Java две первые фазы
 стадии анализа: чтение входного потока и лексический анализ.
 Чтение входного потока должно осуществляться из файла (в UTF-8), при этом
 лексический анализатор должен вычислять текущие координаты в обрабатываемом
 тексте.
 В результате работы программы в стандартный поток вывода должны выдаваться
 описания распознанных лексем в формате
\end_layout

\begin_layout LyX-Code
Тег (координаты): значение
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
Например,
\end_layout

\begin_layout LyX-Code
IDENT (1, 2): count
\end_layout

\begin_layout LyX-Code
ASSIGN (1, 8): :=
\end_layout

\begin_layout LyX-Code
NUMBER (1, 11): 100
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
Лексемы во входном файле могут разделяться пробельными символами (пробел,
 горизонтальная табуляция, маркеры окончания строки), а могут быть записаны
 слитно (если это не
\begin_inset space ~
\end_inset

приводит к противоречиям).
\end_layout

\begin_layout Standard
Идентификаторы и
\begin_inset space ~
\end_inset

числовые литералы не
\begin_inset space ~
\end_inset

могут содержать внутри себя пробельных символов, если в
\begin_inset space ~
\end_inset

задании явно не
\begin_inset space ~
\end_inset

указано иного (варианты 3, 5 и
\begin_inset space ~
\end_inset

34).
 Комментарии, строковые и
\begin_inset space ~
\end_inset

символьные литералы могут содержать внутри себя пробельные символы.
\end_layout

\begin_layout Standard
Входной файл может содержать ошибки, при обнаружении которых лексический
 анализатор должен выдавать сообщение с указанием координаты:
\end_layout

\begin_layout LyX-Code
syntax error (10,2)
\end_layout

\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Standard
После обнаружения ошибки лексический анализатор должен восстанавливаться
 по следующей схеме: из входного потока пропускаются все подряд идущие символы
 до нахождения следующей лексемы.
\end_layout

\begin_layout Standard
Лексический анализатор должен иметь программный интерфейс для взаимодействия
 с
\begin_inset space ~
\end_inset

парсером.
 Рекомендуется реализовывать его как итератор с
\begin_inset space ~
\end_inset

методом 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout

nextToken()
\end_layout

\end_inset

 для императивных языков или функцию, возвращающую список токенов, для функциона
льных языков.
\end_layout

\begin_layout Standard
В
\begin_inset space ~
\end_inset

регулярных выражениях рекомендуется использовать классы символов Unicode
 для обозначения букв, чисел и
\begin_inset space ~
\end_inset

других подобных множеств.
 Многие движки регулярных выражений для задания классов используют синтаксис
 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout


\backslash
p{класс}
\end_layout

\end_inset

.
 Вместо нумерованных групп рекомендуется использовать именованные 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout

(?<имя>regexp)
\end_layout

\end_inset

, при использовании нумерованных групп ненумеруемые обозначаются как 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline true
status open

\begin_layout Plain Layout

(?:regexp)
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Варианты языков для лексического анализа приведены в таблицах 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Краткое-описание-лексики"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Краткое-описание-лексики-2"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Краткое-описание-лексики-3"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Краткое-описание-лексики-4"

\end_inset

 и
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Краткое-описание-лексики-5"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
taskcp}{Unicode}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "tasks-3-4-6.lyx"

\end_inset


\end_layout

\end_body
\end_document
